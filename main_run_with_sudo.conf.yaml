- shell:
    - [add-apt-repository universe, Enabling the Universe APT repository]
    - [add-apt-repository ppa:jgmath2000/et, Add the Eternal Terminal APT PPA repository]

# Dependencies to install Docker repository and package.
- apt:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- shell:
    - ['curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > /usr/share/keyrings/bazel.gpg && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list', Adding Bazel's APT repository]
    - ['gpg --no-default-keyring --keyring=/usr/share/keyrings/javinator9889-ppa-keyring.gpg --keyserver keyserver.ubuntu.com --recv-keys 08633b4aaaeb49fc && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/javinator9889-ppa-keyring.gpg] https://ppa.javinator9889.com all main" > /etc/apt/sources.list.d/javinator9889-ppa.list', Adding Discord's APT repository]
    - ['if ! grep "\.docker\.com" /etc/apt/sources.list /etc/apt/sources.list.d/*; then curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor > /usr/share/keyrings/docker.gpg && UBUNTU_VERSION=$(lsb_release -cs) && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $UBUNTU_VERSION stable" > /etc/apt/sources.list.d/docker.list; fi', Adding Docker's APT repository]
    - ['curl -o- https://deb.packages.mattermost.com/setup-repo.sh | bash', Adding Mattermost's desktop APT repository]
    - ['curl -fsSL https://mirror.mwt.me/zoom/gpgkey > /etc/apt/keyrings/mwt.asc && echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/mwt.asc by-hash=force] https://mirror.mwt.me/zoom/deb any main" > /etc/apt/sources.list.d/mwt.list', Adding mwt's APT repository for Zoom]

- apt:
    - aptitude  # To check the high-level installed packages.
    - aspell-en
    - aspell-es
    - base-passwd
    - bazel
    - bridge-utils
    - btop
    - build-essential
    - bwm-ng
    - cabextract
    - calibre
    - cmake
    - console-setup
    - containerd.io
    - context
    - cpu-checker
    - dash
    - default-jdk
    - diffutils
    - discord
    - docker-buildx-plugin
    - docker-compose-plugin
    - docker-ce
    - docker-ce-cli
    - dos2unix
    - e2fsprogs
    - et
    - findutils
    - firefox
    - flatpak
    - fonts-firacode
    - fonts-indic
    - git
    - git-lfs
    - gnome-software-plugin-flatpak
    - gparted
    - grep
    - grub-common
    - grub-efi-amd64-signed
    - grub-gfxpayload-lists
    - grub-pc
    - grub-pc-bin
    - grub2-common
    - gstreamer1.0-pocketsphinx
    - gstreamer1.0-qt5
    - guake
    - gwenview
    - gzip
    - hostname
    - htop
    - hunspell-en-us
    - hyphen-en-us
    - init
    - iotop-c
    - jq
    - keyboard-configuration
    - language-pack-en
    - language-pack-en-base
    - language-pack-gnome-en
    - language-pack-gnome-en-base
    - libbz2-dev
    - libdebconfclient0
    - libffi-dev
    - libgl1-mesa-glx:i386  # For Steam
    - liblzma-dev
    - libncurses5-dev
    - libpulse-dev
    - libreadline-dev
    - libreoffice
    - libsqlite3-dev
    - libssl-dev
    - libxml2-dev
    - libxmlsec1-dev
    - llvm
    - locales
    - make
    - meld
    - mlocate
    - mokutil
    - mosh
    - mythes-en-us
    - nautilus-dropbox
    - ncurses-base
    - ncurses-bin
    - net-tools
    - network-manager-openconnect-gnome
    - os-prober
    - pciutils
    - pdftk
    - pipx
    - poppler-data
    - pv
    - python-is-python3
    - python3-apt
    - python3-gpg
    - python3-pip
    - python3-venv
    - qemu-system-x86
    - rclone
    - shellcheck
    - shim-signed
    - sshuttle
    - telegram-desktop
    - texlive-full
    - tk-dev
    - tmux
    - tree
    - udev
    - usbutils
    - vim
    - wamerican
    - wbritish
    - wireshark-qt
    - xclip
    - xz-utils
    - zlib1g-dev

- shell:
    # Can't set the release to latest for some because the download asset has the version name in it.
    # Can't use a bash aux function to install a DEB file from an URL because it's not available in sudo. Also the user needs to reload bash after ./install for it to be available.
    - ['TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/keeweb/keeweb/releases/latest | grep "browser_download_url.*deb" | cut -d : -f 2,3 | tr -d \") && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB"', Installing KeeWeb]
    - [apt --fix-broken -y install, Installing KeeWeb dependencies]
    - ['TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep "browser_download_url.*amd64\.deb" | cut -d : -f 2,3 | tr -d \") && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB"', Installing gh]
    - [apt --fix-broken -y install, Installing gh dependencies]
    - [TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb' && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB", Installing Google Chrome]
    - [apt --fix-broken -y install, Installing Google Chrome dependencies]
    - [TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" 'https://cdn.akamai.steamstatic.com/client/installer/steam.deb' && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB", Installing Steam]
    - [apt --fix-broken -y install, Installing Steam dependencies]
    - [TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" 'https://download.teamviewer.com/download/linux/teamviewer_amd64.deb' && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB", Installing TeamViewer]
    - [apt --fix-broken -y install, Installing TeamViewer dependencies]
    - ['TEMP_DEB=$(mktemp) && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/KryDos/todoist-linux/releases/latest | grep "browser_download_url.*deb" | cut -d : -f 2,3 | tr -d \") && dpkg --skip-same-version -i "$TEMP_DEB" && rm -f "$TEMP_DEB"', Installing Todoist]
    - [apt --fix-broken -y install, Installing Todoist dependencies]

- snap:
    - android-studio:
        classic: true
    - clion:
        classic: true
    - code:
        classic: true
    - goland:
        classic: true
    - intellij-idea-ultimate:
        classic: true
    - musescore
    - node:
        classic: true
    - postman
    - pycharm-professional:
        classic: true
    - rubymine:
        classic: true
    - slack:
        classic: true
    - spotify
    - sublime-text:
        classic: true
    - webstorm:
        classic: true

- shell:
    - ['flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo', Adding the Flathub repository to Flatpak]
